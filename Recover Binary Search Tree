/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* firstNum=nullptr;
    TreeNode* secondNum=nullptr;
    TreeNode* prev=new TreeNode(INT_MIN);
    void recoverTree(TreeNode* root) {
        inorder(root);
        swap(firstNum->val,secondNum->val);
    }
    void inorder(TreeNode* root){
        if(root==nullptr) return;
        inorder(root->left);
        if(firstNum==nullptr && root->val < prev->val)
            firstNum=prev;
        if(firstNum!=nullptr && root->val < prev->val)
            secondNum=root;

        prev=root;
        inorder(root->right);
    }
};

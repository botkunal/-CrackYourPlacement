class Solution {
public:
    bool canSplit(vector<int>& nums,int maxSum,int k){
        int currSum =0 ;
        int subarrays=1;

        for(int num:nums){
            if(currSum+num>maxSum){
                subarrays++;
                currSum=num;

                if(subarrays>k){
                    return false;
                }
            }
            else{
                currSum+=num;
            }
        }
        return true;
    }
    int splitArray(vector<int>& nums, int k) {
        int low=*max_element(nums.begin(),nums.end());
        int high=accumulate(nums.begin(),nums.end(),0);
        int result=high;

        while(low<=high){
            int mid=low+(high-low)/2;

            if(canSplit(nums,mid,k)){
                result=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return result;
    }
};

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root,vector<TreeNode*>& nums){
        if(!root) return;
        nums.push_back(root);
        dfs(root->left,nums);
        dfs(root->right,nums);
    }
    void flatten(TreeNode* root) {
        if(!root) return;
        vector<TreeNode*> nums;
        dfs(root,nums);
        
        for(int i=1;i<nums.size();i++){
            root->left=nullptr;
            root->right=nums[i];
            root=root->right;
        }
    }
};
